 // {
    //     eInstructionIdentifier::LD,
    //     {
    //         {
    //             ProcessorUtil::eOperandType::REGISTER,
    //             {
    //                 {
    //                     ProcessorUtil::eAddressingType::DIRECT,
    //                     {
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x91000000),
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::FIRST_OPERAND),
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::SECOND_OPERAND)
    //                             }
    //                         }
    //                     }
    //                 },
    //                 {
    //                     ProcessorUtil::eAddressingType::MEMORY,
    //                     {
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x93000000),
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::SECOND_OPERAND),
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::FIRST_OPERAND)
    //                             }
    //                         }   
    //                     }
    //                 },
    //                 {
    //                     ProcessorUtil::eAddressingType::MEMORY_OFFSET,
    //                     {
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x91000000),
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::FIRST_OPERAND),
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::FIRST_OPERAND),
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::FIRST_OFFSET)
    //                             }
    //                         },
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x93000000),
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::SECOND_OPERAND),
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::FIRST_OPERAND)
    //                             }
    //                         }   
    //                     }
    //                 }
    //             }
    //         },
    //         {
    //             ProcessorUtil::eOperandType::IMMEDIATE,
    //             {
    //                 {
    //                     ProcessorUtil::eAddressingType::MEMORY,
    //                     {
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x81E00000), // push r0
    //                             {
    //                                 DO_NOTHING
    //                             }
    //                         },
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x51000000), // r0 = r0 - r0
    //                             {
    //                                 DO_NOTHING
    //                             }
    //                         },
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x91000000), // r0 = r0 + value
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::FIRST_OPERAND)
    //                             }
    //                         },
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x93000000), // mem[r0] = r[B]
    //                             {
    //                                 std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::SECOND_OPERAND)
    //                             }
    //                         },
    //                         {
    //                             std::make_shared<Instruction>((uint32_t)0x930E0004), // pop r0
    //                             {
    //                                 DO_NOTHING
    //                             }
    //                         }
    //                     }
    //                 }
    //             }
    //         }
    //     }
    // },
    {
        eInstructionIdentifier::ST,
        {
            {
                ProcessorUtil::eOperandType::REGISTER,
                {
                    {
                        ProcessorUtil::eAddressingType::DIRECT,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x91000000),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::FIRST_OPERAND),
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::SECOND_OPERAND)
                                }
                            }
                        }
                    },
                    {
                        ProcessorUtil::eAddressingType::MEMORY,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x81000000),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::SECOND_OPERAND),
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::FIRST_OPERAND)
                                }
                            }
                        }
                    },
                    {
                        ProcessorUtil::eAddressingType::MEMORY_OFFSET,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x81000000),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::SECOND_OPERAND),
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_C, eValueToUse::FIRST_OPERAND),
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::SECOND_OFFSET)
                                }
                            }
                        }
                    }
                }
            },
            {
                ProcessorUtil::eOperandType::IMMEDIATE,
                {
                    {
                        ProcessorUtil::eAddressingType::MEMORY,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x81E00FFC),
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x51000000),
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x91000000),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::SECOND_OPERAND)   
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x81000000),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_B, eValueToUse::FIRST_OPERAND)
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x930E0004),
                                {
                                    DO_NOTHING
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        eInstructionIdentifier::PUSH,
        {
            {
                ProcessorUtil::eOperandType::REGISTER,
                {
                    {
                        ProcessorUtil::eAddressingType::DIRECT,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x81E00FFC),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_C, eValueToUse::FIRST_OPERAND)
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        eInstructionIdentifier::POP,
        {
            {
                ProcessorUtil::eOperandType::REGISTER,
                {
                    {
                        ProcessorUtil::eAddressingType::DIRECT,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x930E0004),
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_REG_A, eValueToUse::FIRST_OPERAND)
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        eInstructionIdentifier::CALL, // push pc; pc <= operand
        {
            {
                eOperandType::IMMEDIATE,
                {
                    {
                        eAddressingType::DIRECT,
                        {
                            {
                                std::make_shared<Instruction>((uint32_t)0x81E0F004), //push PC
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x81E00004), //push r0
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x51000000), // r0 = r0 - r0 (r0 = 0)
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x30000000), // pc <= r0 + payload
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::FIRST_OPERAND)
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x930E0004), //pop r0 (restore r0 back)
                                {
                                    DO_NOTHING
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        eInstructionIdentifier::JMP, // pc <= operand
        {
            {
                eOperandType::IMMEDIATE,
                {
                    {
                        eAddressingType::DIRECT,
                        {
                             {
                                std::make_shared<Instruction>((uint32_t)0x81E00004), //push r0
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x51000000), // r0 = r0 - r0 (r0 = 0)
                                {
                                    DO_NOTHING
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x30000000), // pc <= r0 + payload
                                {
                                    std::make_shared<CodePopulation>(eCodePopulationMethod::SET_PAYLOAD, eValueToUse::FIRST_OPERAND)
                                }
                            },
                            {
                                std::make_shared<Instruction>((uint32_t)0x930E0004), //pop r0 (restore r0 back)
                                {
                                    DO_NOTHING
                                }
                            }
                        }
                    }
                }
            }
        }
    }