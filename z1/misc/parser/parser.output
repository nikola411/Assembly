Terminals unused in grammar

    ":="
    "-"
    "/"
    "("
    ")"
    ASCII
    EQU


Grammar

    0 $accept: program "end of file"

    1 program: program line
    2        | line
    3        | "end of file"

    4 line: directive
    5     | instruction
    6     | jump

    7 directive: GLOBAL symbol_list
    8          | EXTERN symbol_list
    9          | SECTION SYMBOL
   10          | WORD label_list
   11          | SKIP LITERAL
   12          | END
   13          | SYMBOL ":"

   14 symbol_list: symbol_list "," SYMBOL
   15            | SYMBOL

   16 label_list: label_list "," SYMBOL
   17           | label_list "," LITERAL
   18           | LITERAL
   19           | SYMBOL

   20 jump: JMP jump_operand
   21     | JEQ jump_operand
   22     | JNE jump_operand
   23     | JGT jump_operand

   24 jump_operand: LITERAL
   25             | SYMBOL
   26             | "%" SYMBOL
   27             | "*" LITERAL
   28             | "*" SYMBOL
   29             | "*" REGISTER
   30             | "*" "[" REGISTER "]"
   31             | "*" "[" REGISTER "+" LITERAL "]"
   32             | "*" "[" REGISTER "+" SYMBOL "]"

   33 instruction: two_argument_instructions
   34            | one_argument_instructions
   35            | zero_argument_instructions

   36 two_argument_instructions: load_store_instructions
   37                          | instruction_type REGISTER "," REGISTER

   38 load_store_instructions: load_store REGISTER "," "$" LITERAL
   39                        | load_store REGISTER "," "$" SYMBOL
   40                        | load_store REGISTER "," LITERAL
   41                        | load_store REGISTER "," SYMBOL
   42                        | load_store REGISTER "," "%" SYMBOL
   43                        | load_store REGISTER "," REGISTER
   44                        | load_store REGISTER "," "[" REGISTER "]"
   45                        | load_store REGISTER "," "[" REGISTER "+" SYMBOL "]"
   46                        | load_store REGISTER "," "[" REGISTER "+" LITERAL "]"

   47 load_store: LDR
   48           | STR

   49 instruction_type: SHL
   50                 | SHR
   51                 | TEST
   52                 | XOR
   53                 | OR
   54                 | AND
   55                 | CMP
   56                 | DIV
   57                 | MUL
   58                 | SUB
   59                 | ADD
   60                 | XCHG

   61 one_argument_instructions: POP REGISTER
   62                          | PUSH REGISTER
   63                          | NOT REGISTER
   64                          | INT REGISTER
   65                          | CALL REGISTER

   66 zero_argument_instructions: RET
   67                           | IRET
   68                           | HALT


Terminals, with rules where they appear

    "end of file" (0) 0 3
    error (256)
    ":=" (258)
    "-" (259)
    "+" (260) 31 32 45 46
    "*" (261) 27 28 29 30 31 32
    "/" (262)
    "(" (263)
    ")" (264)
    "," (265) 14 16 17 37 38 39 40 41 42 43 44 45 46
    "$" (266) 38 39
    "%" (267) 26 42
    "[" (268) 30 31 32 44 45 46
    "]" (269) 30 31 32 44 45 46
    ":" (270) 13
    GLOBAL (271) 7
    EXTERN (272) 8
    SECTION (273) 9
    WORD (274) 10
    SKIP (275) 11
    ASCII (276)
    EQU (277)
    END (278) 12
    LITERAL <string> (279) 11 17 18 24 27 31 38 40 46
    SYMBOL <string> (280) 9 13 14 15 16 19 25 26 28 32 39 41 42 45
    REGISTER <string> (281) 29 30 31 32 37 38 39 40 41 42 43 44 45 46 61 62 63 64 65
    HALT (282) 68
    INT (283) 64
    IRET (284) 67
    RET (285) 66
    CALL (286) 65
    JMP (287) 20
    JEQ (288) 21
    JNE (289) 22
    JGT (290) 23
    PUSH (291) 62
    POP (292) 61
    XCHG (293) 60
    ADD (294) 59
    SUB (295) 58
    DIV (296) 56
    MUL (297) 57
    CMP (298) 55
    NOT (299) 63
    AND (300) 54
    OR (301) 53
    XOR (302) 52
    TEST (303) 51
    SHL (304) 49
    SHR (305) 50
    LDR (306) 47
    STR (307) 48


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1 2 3
        on right: 0 1
    line (55)
        on left: 4 5 6
        on right: 1 2
    directive <Directive*> (56)
        on left: 7 8 9 10 11 12 13
        on right: 4
    instruction <Instruction*> (57)
        on left: 33 34 35
        on right: 5
    load_store_instructions <Instruction*> (58)
        on left: 38 39 40 41 42 43 44 45 46
        on right: 36
    two_argument_instructions <Instruction*> (59)
        on left: 36 37
        on right: 33
    one_argument_instructions <Instruction*> (60)
        on left: 61 62 63 64 65
        on right: 34
    zero_argument_instructions <Instruction*> (61)
        on left: 66 67 68
        on right: 35
    jump_operand <Jump*> (62)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 20 21 22 23
    jump <Jump*> (63)
        on left: 20 21 22 23
        on right: 6
    symbol_list <vector<string>> (64)
        on left: 14 15
        on right: 7 8 14
    label_list <Directive*> (65)
        on left: 16 17 18 19
        on right: 10 16 17
    load_store <Instruction_type> (66)
        on left: 47 48
        on right: 38 39 40 41 42 43 44 45 46
    instruction_type <Instruction_type> (67)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 37


State 0

    0 $accept: . program "end of file"

    "end of file"  shift, and go to state 1
    GLOBAL         shift, and go to state 2
    EXTERN         shift, and go to state 3
    SECTION        shift, and go to state 4
    WORD           shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 7
    SYMBOL         shift, and go to state 8
    HALT           shift, and go to state 9
    INT            shift, and go to state 10
    IRET           shift, and go to state 11
    RET            shift, and go to state 12
    CALL           shift, and go to state 13
    JMP            shift, and go to state 14
    JEQ            shift, and go to state 15
    JNE            shift, and go to state 16
    JGT            shift, and go to state 17
    PUSH           shift, and go to state 18
    POP            shift, and go to state 19
    XCHG           shift, and go to state 20
    ADD            shift, and go to state 21
    SUB            shift, and go to state 22
    DIV            shift, and go to state 23
    MUL            shift, and go to state 24
    CMP            shift, and go to state 25
    NOT            shift, and go to state 26
    AND            shift, and go to state 27
    OR             shift, and go to state 28
    XOR            shift, and go to state 29
    TEST           shift, and go to state 30
    SHL            shift, and go to state 31
    SHR            shift, and go to state 32
    LDR            shift, and go to state 33
    STR            shift, and go to state 34

    program                     go to state 35
    line                        go to state 36
    directive                   go to state 37
    instruction                 go to state 38
    load_store_instructions     go to state 39
    two_argument_instructions   go to state 40
    one_argument_instructions   go to state 41
    zero_argument_instructions  go to state 42
    jump                        go to state 43
    load_store                  go to state 44
    instruction_type            go to state 45


State 1

    3 program: "end of file" .

    $default  reduce using rule 3 (program)


State 2

    7 directive: GLOBAL . symbol_list

    SYMBOL  shift, and go to state 46

    symbol_list  go to state 47


State 3

    8 directive: EXTERN . symbol_list

    SYMBOL  shift, and go to state 46

    symbol_list  go to state 48


State 4

    9 directive: SECTION . SYMBOL

    SYMBOL  shift, and go to state 49


State 5

   10 directive: WORD . label_list

    LITERAL  shift, and go to state 50
    SYMBOL   shift, and go to state 51

    label_list  go to state 52


State 6

   11 directive: SKIP . LITERAL

    LITERAL  shift, and go to state 53


State 7

   12 directive: END .

    $default  reduce using rule 12 (directive)


State 8

   13 directive: SYMBOL . ":"

    ":"  shift, and go to state 54


State 9

   68 zero_argument_instructions: HALT .

    $default  reduce using rule 68 (zero_argument_instructions)


State 10

   64 one_argument_instructions: INT . REGISTER

    REGISTER  shift, and go to state 55


State 11

   67 zero_argument_instructions: IRET .

    $default  reduce using rule 67 (zero_argument_instructions)


State 12

   66 zero_argument_instructions: RET .

    $default  reduce using rule 66 (zero_argument_instructions)


State 13

   65 one_argument_instructions: CALL . REGISTER

    REGISTER  shift, and go to state 56


State 14

   20 jump: JMP . jump_operand

    "*"      shift, and go to state 57
    "%"      shift, and go to state 58
    LITERAL  shift, and go to state 59
    SYMBOL   shift, and go to state 60

    jump_operand  go to state 61


State 15

   21 jump: JEQ . jump_operand

    "*"      shift, and go to state 57
    "%"      shift, and go to state 58
    LITERAL  shift, and go to state 59
    SYMBOL   shift, and go to state 60

    jump_operand  go to state 62


State 16

   22 jump: JNE . jump_operand

    "*"      shift, and go to state 57
    "%"      shift, and go to state 58
    LITERAL  shift, and go to state 59
    SYMBOL   shift, and go to state 60

    jump_operand  go to state 63


State 17

   23 jump: JGT . jump_operand

    "*"      shift, and go to state 57
    "%"      shift, and go to state 58
    LITERAL  shift, and go to state 59
    SYMBOL   shift, and go to state 60

    jump_operand  go to state 64


State 18

   62 one_argument_instructions: PUSH . REGISTER

    REGISTER  shift, and go to state 65


State 19

   61 one_argument_instructions: POP . REGISTER

    REGISTER  shift, and go to state 66


State 20

   60 instruction_type: XCHG .

    $default  reduce using rule 60 (instruction_type)


State 21

   59 instruction_type: ADD .

    $default  reduce using rule 59 (instruction_type)


State 22

   58 instruction_type: SUB .

    $default  reduce using rule 58 (instruction_type)


State 23

   56 instruction_type: DIV .

    $default  reduce using rule 56 (instruction_type)


State 24

   57 instruction_type: MUL .

    $default  reduce using rule 57 (instruction_type)


State 25

   55 instruction_type: CMP .

    $default  reduce using rule 55 (instruction_type)


State 26

   63 one_argument_instructions: NOT . REGISTER

    REGISTER  shift, and go to state 67


State 27

   54 instruction_type: AND .

    $default  reduce using rule 54 (instruction_type)


State 28

   53 instruction_type: OR .

    $default  reduce using rule 53 (instruction_type)


State 29

   52 instruction_type: XOR .

    $default  reduce using rule 52 (instruction_type)


State 30

   51 instruction_type: TEST .

    $default  reduce using rule 51 (instruction_type)


State 31

   49 instruction_type: SHL .

    $default  reduce using rule 49 (instruction_type)


State 32

   50 instruction_type: SHR .

    $default  reduce using rule 50 (instruction_type)


State 33

   47 load_store: LDR .

    $default  reduce using rule 47 (load_store)


State 34

   48 load_store: STR .

    $default  reduce using rule 48 (load_store)


State 35

    0 $accept: program . "end of file"
    1 program: program . line

    "end of file"  shift, and go to state 68
    GLOBAL         shift, and go to state 2
    EXTERN         shift, and go to state 3
    SECTION        shift, and go to state 4
    WORD           shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 7
    SYMBOL         shift, and go to state 8
    HALT           shift, and go to state 9
    INT            shift, and go to state 10
    IRET           shift, and go to state 11
    RET            shift, and go to state 12
    CALL           shift, and go to state 13
    JMP            shift, and go to state 14
    JEQ            shift, and go to state 15
    JNE            shift, and go to state 16
    JGT            shift, and go to state 17
    PUSH           shift, and go to state 18
    POP            shift, and go to state 19
    XCHG           shift, and go to state 20
    ADD            shift, and go to state 21
    SUB            shift, and go to state 22
    DIV            shift, and go to state 23
    MUL            shift, and go to state 24
    CMP            shift, and go to state 25
    NOT            shift, and go to state 26
    AND            shift, and go to state 27
    OR             shift, and go to state 28
    XOR            shift, and go to state 29
    TEST           shift, and go to state 30
    SHL            shift, and go to state 31
    SHR            shift, and go to state 32
    LDR            shift, and go to state 33
    STR            shift, and go to state 34

    line                        go to state 69
    directive                   go to state 37
    instruction                 go to state 38
    load_store_instructions     go to state 39
    two_argument_instructions   go to state 40
    one_argument_instructions   go to state 41
    zero_argument_instructions  go to state 42
    jump                        go to state 43
    load_store                  go to state 44
    instruction_type            go to state 45


State 36

    2 program: line .

    $default  reduce using rule 2 (program)


State 37

    4 line: directive .

    $default  reduce using rule 4 (line)


State 38

    5 line: instruction .

    $default  reduce using rule 5 (line)


State 39

   36 two_argument_instructions: load_store_instructions .

    $default  reduce using rule 36 (two_argument_instructions)


State 40

   33 instruction: two_argument_instructions .

    $default  reduce using rule 33 (instruction)


State 41

   34 instruction: one_argument_instructions .

    $default  reduce using rule 34 (instruction)


State 42

   35 instruction: zero_argument_instructions .

    $default  reduce using rule 35 (instruction)


State 43

    6 line: jump .

    $default  reduce using rule 6 (line)


State 44

   38 load_store_instructions: load_store . REGISTER "," "$" LITERAL
   39                        | load_store . REGISTER "," "$" SYMBOL
   40                        | load_store . REGISTER "," LITERAL
   41                        | load_store . REGISTER "," SYMBOL
   42                        | load_store . REGISTER "," "%" SYMBOL
   43                        | load_store . REGISTER "," REGISTER
   44                        | load_store . REGISTER "," "[" REGISTER "]"
   45                        | load_store . REGISTER "," "[" REGISTER "+" SYMBOL "]"
   46                        | load_store . REGISTER "," "[" REGISTER "+" LITERAL "]"

    REGISTER  shift, and go to state 70


State 45

   37 two_argument_instructions: instruction_type . REGISTER "," REGISTER

    REGISTER  shift, and go to state 71


State 46

   15 symbol_list: SYMBOL .

    $default  reduce using rule 15 (symbol_list)


State 47

    7 directive: GLOBAL symbol_list .
   14 symbol_list: symbol_list . "," SYMBOL

    ","  shift, and go to state 72

    $default  reduce using rule 7 (directive)


State 48

    8 directive: EXTERN symbol_list .
   14 symbol_list: symbol_list . "," SYMBOL

    ","  shift, and go to state 72

    $default  reduce using rule 8 (directive)


State 49

    9 directive: SECTION SYMBOL .

    $default  reduce using rule 9 (directive)


State 50

   18 label_list: LITERAL .

    $default  reduce using rule 18 (label_list)


State 51

   19 label_list: SYMBOL .

    $default  reduce using rule 19 (label_list)


State 52

   10 directive: WORD label_list .
   16 label_list: label_list . "," SYMBOL
   17           | label_list . "," LITERAL

    ","  shift, and go to state 73

    $default  reduce using rule 10 (directive)


State 53

   11 directive: SKIP LITERAL .

    $default  reduce using rule 11 (directive)


State 54

   13 directive: SYMBOL ":" .

    $default  reduce using rule 13 (directive)


State 55

   64 one_argument_instructions: INT REGISTER .

    $default  reduce using rule 64 (one_argument_instructions)


State 56

   65 one_argument_instructions: CALL REGISTER .

    $default  reduce using rule 65 (one_argument_instructions)


State 57

   27 jump_operand: "*" . LITERAL
   28             | "*" . SYMBOL
   29             | "*" . REGISTER
   30             | "*" . "[" REGISTER "]"
   31             | "*" . "[" REGISTER "+" LITERAL "]"
   32             | "*" . "[" REGISTER "+" SYMBOL "]"

    "["       shift, and go to state 74
    LITERAL   shift, and go to state 75
    SYMBOL    shift, and go to state 76
    REGISTER  shift, and go to state 77


State 58

   26 jump_operand: "%" . SYMBOL

    SYMBOL  shift, and go to state 78


State 59

   24 jump_operand: LITERAL .

    $default  reduce using rule 24 (jump_operand)


State 60

   25 jump_operand: SYMBOL .

    $default  reduce using rule 25 (jump_operand)


State 61

   20 jump: JMP jump_operand .

    $default  reduce using rule 20 (jump)


State 62

   21 jump: JEQ jump_operand .

    $default  reduce using rule 21 (jump)


State 63

   22 jump: JNE jump_operand .

    $default  reduce using rule 22 (jump)


State 64

   23 jump: JGT jump_operand .

    $default  reduce using rule 23 (jump)


State 65

   62 one_argument_instructions: PUSH REGISTER .

    $default  reduce using rule 62 (one_argument_instructions)


State 66

   61 one_argument_instructions: POP REGISTER .

    $default  reduce using rule 61 (one_argument_instructions)


State 67

   63 one_argument_instructions: NOT REGISTER .

    $default  reduce using rule 63 (one_argument_instructions)


State 68

    0 $accept: program "end of file" .

    $default  accept


State 69

    1 program: program line .

    $default  reduce using rule 1 (program)


State 70

   38 load_store_instructions: load_store REGISTER . "," "$" LITERAL
   39                        | load_store REGISTER . "," "$" SYMBOL
   40                        | load_store REGISTER . "," LITERAL
   41                        | load_store REGISTER . "," SYMBOL
   42                        | load_store REGISTER . "," "%" SYMBOL
   43                        | load_store REGISTER . "," REGISTER
   44                        | load_store REGISTER . "," "[" REGISTER "]"
   45                        | load_store REGISTER . "," "[" REGISTER "+" SYMBOL "]"
   46                        | load_store REGISTER . "," "[" REGISTER "+" LITERAL "]"

    ","  shift, and go to state 79


State 71

   37 two_argument_instructions: instruction_type REGISTER . "," REGISTER

    ","  shift, and go to state 80


State 72

   14 symbol_list: symbol_list "," . SYMBOL

    SYMBOL  shift, and go to state 81


State 73

   16 label_list: label_list "," . SYMBOL
   17           | label_list "," . LITERAL

    LITERAL  shift, and go to state 82
    SYMBOL   shift, and go to state 83


State 74

   30 jump_operand: "*" "[" . REGISTER "]"
   31             | "*" "[" . REGISTER "+" LITERAL "]"
   32             | "*" "[" . REGISTER "+" SYMBOL "]"

    REGISTER  shift, and go to state 84


State 75

   27 jump_operand: "*" LITERAL .

    $default  reduce using rule 27 (jump_operand)


State 76

   28 jump_operand: "*" SYMBOL .

    $default  reduce using rule 28 (jump_operand)


State 77

   29 jump_operand: "*" REGISTER .

    $default  reduce using rule 29 (jump_operand)


State 78

   26 jump_operand: "%" SYMBOL .

    $default  reduce using rule 26 (jump_operand)


State 79

   38 load_store_instructions: load_store REGISTER "," . "$" LITERAL
   39                        | load_store REGISTER "," . "$" SYMBOL
   40                        | load_store REGISTER "," . LITERAL
   41                        | load_store REGISTER "," . SYMBOL
   42                        | load_store REGISTER "," . "%" SYMBOL
   43                        | load_store REGISTER "," . REGISTER
   44                        | load_store REGISTER "," . "[" REGISTER "]"
   45                        | load_store REGISTER "," . "[" REGISTER "+" SYMBOL "]"
   46                        | load_store REGISTER "," . "[" REGISTER "+" LITERAL "]"

    "$"       shift, and go to state 85
    "%"       shift, and go to state 86
    "["       shift, and go to state 87
    LITERAL   shift, and go to state 88
    SYMBOL    shift, and go to state 89
    REGISTER  shift, and go to state 90


State 80

   37 two_argument_instructions: instruction_type REGISTER "," . REGISTER

    REGISTER  shift, and go to state 91


State 81

   14 symbol_list: symbol_list "," SYMBOL .

    $default  reduce using rule 14 (symbol_list)


State 82

   17 label_list: label_list "," LITERAL .

    $default  reduce using rule 17 (label_list)


State 83

   16 label_list: label_list "," SYMBOL .

    $default  reduce using rule 16 (label_list)


State 84

   30 jump_operand: "*" "[" REGISTER . "]"
   31             | "*" "[" REGISTER . "+" LITERAL "]"
   32             | "*" "[" REGISTER . "+" SYMBOL "]"

    "+"  shift, and go to state 92
    "]"  shift, and go to state 93


State 85

   38 load_store_instructions: load_store REGISTER "," "$" . LITERAL
   39                        | load_store REGISTER "," "$" . SYMBOL

    LITERAL  shift, and go to state 94
    SYMBOL   shift, and go to state 95


State 86

   42 load_store_instructions: load_store REGISTER "," "%" . SYMBOL

    SYMBOL  shift, and go to state 96


State 87

   44 load_store_instructions: load_store REGISTER "," "[" . REGISTER "]"
   45                        | load_store REGISTER "," "[" . REGISTER "+" SYMBOL "]"
   46                        | load_store REGISTER "," "[" . REGISTER "+" LITERAL "]"

    REGISTER  shift, and go to state 97


State 88

   40 load_store_instructions: load_store REGISTER "," LITERAL .

    $default  reduce using rule 40 (load_store_instructions)


State 89

   41 load_store_instructions: load_store REGISTER "," SYMBOL .

    $default  reduce using rule 41 (load_store_instructions)


State 90

   43 load_store_instructions: load_store REGISTER "," REGISTER .

    $default  reduce using rule 43 (load_store_instructions)


State 91

   37 two_argument_instructions: instruction_type REGISTER "," REGISTER .

    $default  reduce using rule 37 (two_argument_instructions)


State 92

   31 jump_operand: "*" "[" REGISTER "+" . LITERAL "]"
   32             | "*" "[" REGISTER "+" . SYMBOL "]"

    LITERAL  shift, and go to state 98
    SYMBOL   shift, and go to state 99


State 93

   30 jump_operand: "*" "[" REGISTER "]" .

    $default  reduce using rule 30 (jump_operand)


State 94

   38 load_store_instructions: load_store REGISTER "," "$" LITERAL .

    $default  reduce using rule 38 (load_store_instructions)


State 95

   39 load_store_instructions: load_store REGISTER "," "$" SYMBOL .

    $default  reduce using rule 39 (load_store_instructions)


State 96

   42 load_store_instructions: load_store REGISTER "," "%" SYMBOL .

    $default  reduce using rule 42 (load_store_instructions)


State 97

   44 load_store_instructions: load_store REGISTER "," "[" REGISTER . "]"
   45                        | load_store REGISTER "," "[" REGISTER . "+" SYMBOL "]"
   46                        | load_store REGISTER "," "[" REGISTER . "+" LITERAL "]"

    "+"  shift, and go to state 100
    "]"  shift, and go to state 101


State 98

   31 jump_operand: "*" "[" REGISTER "+" LITERAL . "]"

    "]"  shift, and go to state 102


State 99

   32 jump_operand: "*" "[" REGISTER "+" SYMBOL . "]"

    "]"  shift, and go to state 103


State 100

   45 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" . SYMBOL "]"
   46                        | load_store REGISTER "," "[" REGISTER "+" . LITERAL "]"

    LITERAL  shift, and go to state 104
    SYMBOL   shift, and go to state 105


State 101

   44 load_store_instructions: load_store REGISTER "," "[" REGISTER "]" .

    $default  reduce using rule 44 (load_store_instructions)


State 102

   31 jump_operand: "*" "[" REGISTER "+" LITERAL "]" .

    $default  reduce using rule 31 (jump_operand)


State 103

   32 jump_operand: "*" "[" REGISTER "+" SYMBOL "]" .

    $default  reduce using rule 32 (jump_operand)


State 104

   46 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" LITERAL . "]"

    "]"  shift, and go to state 106


State 105

   45 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" SYMBOL . "]"

    "]"  shift, and go to state 107


State 106

   46 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" LITERAL "]" .

    $default  reduce using rule 46 (load_store_instructions)


State 107

   45 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" SYMBOL "]" .

    $default  reduce using rule 45 (load_store_instructions)
