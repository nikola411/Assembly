Terminals unused in grammar

    ":="
    "-"
    "*"
    "/"
    "("
    ")"
    ASCII
    EQU
    HALT
    INT
    IRET
    RET
    CALL


Grammar

    0 $accept: program "end of file"

    1 program: program line
    2        | line
    3        | "end of file"

    4 line: directive
    5     | instruction
    6     | jump

    7 directive: GLOBAL symbol_list
    8          | EXTERN symbol_list
    9          | SECTION SYMBOL
   10          | WORD label_list
   11          | SKIP LITERAL
   12          | END

   13 symbol_list: symbol_list "," SYMBOL
   14            | SYMBOL

   15 label_list: label_list "," SYMBOL
   16           | label_list "," LITERAL
   17           | LITERAL
   18           | SYMBOL

   19 jump: JMP
   20     | JEQ
   21     | JNE
   22     | JGT

   23 instruction: two_argument_instructions
   24            | one_argument_instructions

   25 two_argument_instructions: load_store_instructions
   26                          | instruction_type REGISTER "," REGISTER

   27 load_store_instructions: load_store REGISTER "," "$" LITERAL
   28                        | load_store REGISTER "," "$" SYMBOL
   29                        | load_store REGISTER "," LITERAL
   30                        | load_store REGISTER "," SYMBOL
   31                        | load_store REGISTER "," "%" SYMBOL
   32                        | load_store REGISTER "," REGISTER
   33                        | load_store REGISTER "," "[" REGISTER "]"
   34                        | load_store REGISTER "," "[" REGISTER "+" SYMBOL "]"
   35                        | load_store REGISTER "," "[" REGISTER "+" LITERAL "]"

   36 load_store: LDR
   37           | STR

   38 instruction_type: SHL
   39                 | SHR
   40                 | TEST
   41                 | XOR
   42                 | OR
   43                 | AND
   44                 | CMP
   45                 | DIV
   46                 | MUL
   47                 | SUB
   48                 | ADD
   49                 | XCHG

   50 one_argument_instructions: POP
   51                          | PUSH
   52                          | NOT


Terminals, with rules where they appear

    "end of file" (0) 0 3
    error (256)
    ":=" (258)
    "-" (259)
    "+" (260) 34 35
    "*" (261)
    "/" (262)
    "(" (263)
    ")" (264)
    "," (265) 13 15 16 26 27 28 29 30 31 32 33 34 35
    "$" (266) 27 28
    "%" (267) 31
    "[" (268) 33 34 35
    "]" (269) 33 34 35
    GLOBAL (270) 7
    EXTERN (271) 8
    SECTION (272) 9
    WORD (273) 10
    SKIP (274) 11
    ASCII (275)
    EQU (276)
    END (277) 12
    LITERAL <string> (278) 11 16 17 27 29 35
    SYMBOL <string> (279) 9 13 14 15 18 28 30 31 34
    REGISTER <string> (280) 26 27 28 29 30 31 32 33 34 35
    HALT (281)
    INT (282)
    IRET (283)
    RET (284)
    CALL (285)
    JMP (286) 19
    JEQ (287) 20
    JNE (288) 21
    JGT (289) 22
    PUSH (290) 51
    POP (291) 50
    XCHG (292) 49
    ADD (293) 48
    SUB (294) 47
    DIV (295) 45
    MUL (296) 46
    CMP (297) 44
    NOT (298) 52
    AND (299) 43
    OR (300) 42
    XOR (301) 41
    TEST (302) 40
    SHL (303) 38
    SHR (304) 39
    LDR (305) 36
    STR (306) 37


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2 3
        on right: 0 1
    line (54)
        on left: 4 5 6
        on right: 1 2
    directive <Directive*> (55)
        on left: 7 8 9 10 11 12
        on right: 4
    instruction <Instruction*> (56)
        on left: 23 24
        on right: 5
    load_store_instructions <Instruction*> (57)
        on left: 27 28 29 30 31 32 33 34 35
        on right: 25
    two_argument_instructions <Instruction*> (58)
        on left: 25 26
        on right: 23
    one_argument_instructions <Instruction*> (59)
        on left: 50 51 52
        on right: 24
    jump (60)
        on left: 19 20 21 22
        on right: 6
    symbol_list <vector<string>> (61)
        on left: 13 14
        on right: 7 8 13
    label_list <vector<string>> (62)
        on left: 15 16 17 18
        on right: 10 15 16
    load_store <Instruction_type> (63)
        on left: 36 37
        on right: 27 28 29 30 31 32 33 34 35
    instruction_type <Instruction_type> (64)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 26


State 0

    0 $accept: . program "end of file"

    "end of file"  shift, and go to state 1
    GLOBAL         shift, and go to state 2
    EXTERN         shift, and go to state 3
    SECTION        shift, and go to state 4
    WORD           shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 7
    JMP            shift, and go to state 8
    JEQ            shift, and go to state 9
    JNE            shift, and go to state 10
    JGT            shift, and go to state 11
    PUSH           shift, and go to state 12
    POP            shift, and go to state 13
    XCHG           shift, and go to state 14
    ADD            shift, and go to state 15
    SUB            shift, and go to state 16
    DIV            shift, and go to state 17
    MUL            shift, and go to state 18
    CMP            shift, and go to state 19
    NOT            shift, and go to state 20
    AND            shift, and go to state 21
    OR             shift, and go to state 22
    XOR            shift, and go to state 23
    TEST           shift, and go to state 24
    SHL            shift, and go to state 25
    SHR            shift, and go to state 26
    LDR            shift, and go to state 27
    STR            shift, and go to state 28

    program                    go to state 29
    line                       go to state 30
    directive                  go to state 31
    instruction                go to state 32
    load_store_instructions    go to state 33
    two_argument_instructions  go to state 34
    one_argument_instructions  go to state 35
    jump                       go to state 36
    load_store                 go to state 37
    instruction_type           go to state 38


State 1

    3 program: "end of file" .

    $default  reduce using rule 3 (program)


State 2

    7 directive: GLOBAL . symbol_list

    SYMBOL  shift, and go to state 39

    symbol_list  go to state 40


State 3

    8 directive: EXTERN . symbol_list

    SYMBOL  shift, and go to state 39

    symbol_list  go to state 41


State 4

    9 directive: SECTION . SYMBOL

    SYMBOL  shift, and go to state 42


State 5

   10 directive: WORD . label_list

    LITERAL  shift, and go to state 43
    SYMBOL   shift, and go to state 44

    label_list  go to state 45


State 6

   11 directive: SKIP . LITERAL

    LITERAL  shift, and go to state 46


State 7

   12 directive: END .

    $default  reduce using rule 12 (directive)


State 8

   19 jump: JMP .

    $default  reduce using rule 19 (jump)


State 9

   20 jump: JEQ .

    $default  reduce using rule 20 (jump)


State 10

   21 jump: JNE .

    $default  reduce using rule 21 (jump)


State 11

   22 jump: JGT .

    $default  reduce using rule 22 (jump)


State 12

   51 one_argument_instructions: PUSH .

    $default  reduce using rule 51 (one_argument_instructions)


State 13

   50 one_argument_instructions: POP .

    $default  reduce using rule 50 (one_argument_instructions)


State 14

   49 instruction_type: XCHG .

    $default  reduce using rule 49 (instruction_type)


State 15

   48 instruction_type: ADD .

    $default  reduce using rule 48 (instruction_type)


State 16

   47 instruction_type: SUB .

    $default  reduce using rule 47 (instruction_type)


State 17

   45 instruction_type: DIV .

    $default  reduce using rule 45 (instruction_type)


State 18

   46 instruction_type: MUL .

    $default  reduce using rule 46 (instruction_type)


State 19

   44 instruction_type: CMP .

    $default  reduce using rule 44 (instruction_type)


State 20

   52 one_argument_instructions: NOT .

    $default  reduce using rule 52 (one_argument_instructions)


State 21

   43 instruction_type: AND .

    $default  reduce using rule 43 (instruction_type)


State 22

   42 instruction_type: OR .

    $default  reduce using rule 42 (instruction_type)


State 23

   41 instruction_type: XOR .

    $default  reduce using rule 41 (instruction_type)


State 24

   40 instruction_type: TEST .

    $default  reduce using rule 40 (instruction_type)


State 25

   38 instruction_type: SHL .

    $default  reduce using rule 38 (instruction_type)


State 26

   39 instruction_type: SHR .

    $default  reduce using rule 39 (instruction_type)


State 27

   36 load_store: LDR .

    $default  reduce using rule 36 (load_store)


State 28

   37 load_store: STR .

    $default  reduce using rule 37 (load_store)


State 29

    0 $accept: program . "end of file"
    1 program: program . line

    "end of file"  shift, and go to state 47
    GLOBAL         shift, and go to state 2
    EXTERN         shift, and go to state 3
    SECTION        shift, and go to state 4
    WORD           shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 7
    JMP            shift, and go to state 8
    JEQ            shift, and go to state 9
    JNE            shift, and go to state 10
    JGT            shift, and go to state 11
    PUSH           shift, and go to state 12
    POP            shift, and go to state 13
    XCHG           shift, and go to state 14
    ADD            shift, and go to state 15
    SUB            shift, and go to state 16
    DIV            shift, and go to state 17
    MUL            shift, and go to state 18
    CMP            shift, and go to state 19
    NOT            shift, and go to state 20
    AND            shift, and go to state 21
    OR             shift, and go to state 22
    XOR            shift, and go to state 23
    TEST           shift, and go to state 24
    SHL            shift, and go to state 25
    SHR            shift, and go to state 26
    LDR            shift, and go to state 27
    STR            shift, and go to state 28

    line                       go to state 48
    directive                  go to state 31
    instruction                go to state 32
    load_store_instructions    go to state 33
    two_argument_instructions  go to state 34
    one_argument_instructions  go to state 35
    jump                       go to state 36
    load_store                 go to state 37
    instruction_type           go to state 38


State 30

    2 program: line .

    $default  reduce using rule 2 (program)


State 31

    4 line: directive .

    $default  reduce using rule 4 (line)


State 32

    5 line: instruction .

    $default  reduce using rule 5 (line)


State 33

   25 two_argument_instructions: load_store_instructions .

    $default  reduce using rule 25 (two_argument_instructions)


State 34

   23 instruction: two_argument_instructions .

    $default  reduce using rule 23 (instruction)


State 35

   24 instruction: one_argument_instructions .

    $default  reduce using rule 24 (instruction)


State 36

    6 line: jump .

    $default  reduce using rule 6 (line)


State 37

   27 load_store_instructions: load_store . REGISTER "," "$" LITERAL
   28                        | load_store . REGISTER "," "$" SYMBOL
   29                        | load_store . REGISTER "," LITERAL
   30                        | load_store . REGISTER "," SYMBOL
   31                        | load_store . REGISTER "," "%" SYMBOL
   32                        | load_store . REGISTER "," REGISTER
   33                        | load_store . REGISTER "," "[" REGISTER "]"
   34                        | load_store . REGISTER "," "[" REGISTER "+" SYMBOL "]"
   35                        | load_store . REGISTER "," "[" REGISTER "+" LITERAL "]"

    REGISTER  shift, and go to state 49


State 38

   26 two_argument_instructions: instruction_type . REGISTER "," REGISTER

    REGISTER  shift, and go to state 50


State 39

   14 symbol_list: SYMBOL .

    $default  reduce using rule 14 (symbol_list)


State 40

    7 directive: GLOBAL symbol_list .
   13 symbol_list: symbol_list . "," SYMBOL

    ","  shift, and go to state 51

    $default  reduce using rule 7 (directive)


State 41

    8 directive: EXTERN symbol_list .
   13 symbol_list: symbol_list . "," SYMBOL

    ","  shift, and go to state 51

    $default  reduce using rule 8 (directive)


State 42

    9 directive: SECTION SYMBOL .

    $default  reduce using rule 9 (directive)


State 43

   17 label_list: LITERAL .

    $default  reduce using rule 17 (label_list)


State 44

   18 label_list: SYMBOL .

    $default  reduce using rule 18 (label_list)


State 45

   10 directive: WORD label_list .
   15 label_list: label_list . "," SYMBOL
   16           | label_list . "," LITERAL

    ","  shift, and go to state 52

    $default  reduce using rule 10 (directive)


State 46

   11 directive: SKIP LITERAL .

    $default  reduce using rule 11 (directive)


State 47

    0 $accept: program "end of file" .

    $default  accept


State 48

    1 program: program line .

    $default  reduce using rule 1 (program)


State 49

   27 load_store_instructions: load_store REGISTER . "," "$" LITERAL
   28                        | load_store REGISTER . "," "$" SYMBOL
   29                        | load_store REGISTER . "," LITERAL
   30                        | load_store REGISTER . "," SYMBOL
   31                        | load_store REGISTER . "," "%" SYMBOL
   32                        | load_store REGISTER . "," REGISTER
   33                        | load_store REGISTER . "," "[" REGISTER "]"
   34                        | load_store REGISTER . "," "[" REGISTER "+" SYMBOL "]"
   35                        | load_store REGISTER . "," "[" REGISTER "+" LITERAL "]"

    ","  shift, and go to state 53


State 50

   26 two_argument_instructions: instruction_type REGISTER . "," REGISTER

    ","  shift, and go to state 54


State 51

   13 symbol_list: symbol_list "," . SYMBOL

    SYMBOL  shift, and go to state 55


State 52

   15 label_list: label_list "," . SYMBOL
   16           | label_list "," . LITERAL

    LITERAL  shift, and go to state 56
    SYMBOL   shift, and go to state 57


State 53

   27 load_store_instructions: load_store REGISTER "," . "$" LITERAL
   28                        | load_store REGISTER "," . "$" SYMBOL
   29                        | load_store REGISTER "," . LITERAL
   30                        | load_store REGISTER "," . SYMBOL
   31                        | load_store REGISTER "," . "%" SYMBOL
   32                        | load_store REGISTER "," . REGISTER
   33                        | load_store REGISTER "," . "[" REGISTER "]"
   34                        | load_store REGISTER "," . "[" REGISTER "+" SYMBOL "]"
   35                        | load_store REGISTER "," . "[" REGISTER "+" LITERAL "]"

    "$"       shift, and go to state 58
    "%"       shift, and go to state 59
    "["       shift, and go to state 60
    LITERAL   shift, and go to state 61
    SYMBOL    shift, and go to state 62
    REGISTER  shift, and go to state 63


State 54

   26 two_argument_instructions: instruction_type REGISTER "," . REGISTER

    REGISTER  shift, and go to state 64


State 55

   13 symbol_list: symbol_list "," SYMBOL .

    $default  reduce using rule 13 (symbol_list)


State 56

   16 label_list: label_list "," LITERAL .

    $default  reduce using rule 16 (label_list)


State 57

   15 label_list: label_list "," SYMBOL .

    $default  reduce using rule 15 (label_list)


State 58

   27 load_store_instructions: load_store REGISTER "," "$" . LITERAL
   28                        | load_store REGISTER "," "$" . SYMBOL

    LITERAL  shift, and go to state 65
    SYMBOL   shift, and go to state 66


State 59

   31 load_store_instructions: load_store REGISTER "," "%" . SYMBOL

    SYMBOL  shift, and go to state 67


State 60

   33 load_store_instructions: load_store REGISTER "," "[" . REGISTER "]"
   34                        | load_store REGISTER "," "[" . REGISTER "+" SYMBOL "]"
   35                        | load_store REGISTER "," "[" . REGISTER "+" LITERAL "]"

    REGISTER  shift, and go to state 68


State 61

   29 load_store_instructions: load_store REGISTER "," LITERAL .

    $default  reduce using rule 29 (load_store_instructions)


State 62

   30 load_store_instructions: load_store REGISTER "," SYMBOL .

    $default  reduce using rule 30 (load_store_instructions)


State 63

   32 load_store_instructions: load_store REGISTER "," REGISTER .

    $default  reduce using rule 32 (load_store_instructions)


State 64

   26 two_argument_instructions: instruction_type REGISTER "," REGISTER .

    $default  reduce using rule 26 (two_argument_instructions)


State 65

   27 load_store_instructions: load_store REGISTER "," "$" LITERAL .

    $default  reduce using rule 27 (load_store_instructions)


State 66

   28 load_store_instructions: load_store REGISTER "," "$" SYMBOL .

    $default  reduce using rule 28 (load_store_instructions)


State 67

   31 load_store_instructions: load_store REGISTER "," "%" SYMBOL .

    $default  reduce using rule 31 (load_store_instructions)


State 68

   33 load_store_instructions: load_store REGISTER "," "[" REGISTER . "]"
   34                        | load_store REGISTER "," "[" REGISTER . "+" SYMBOL "]"
   35                        | load_store REGISTER "," "[" REGISTER . "+" LITERAL "]"

    "+"  shift, and go to state 69
    "]"  shift, and go to state 70


State 69

   34 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" . SYMBOL "]"
   35                        | load_store REGISTER "," "[" REGISTER "+" . LITERAL "]"

    LITERAL  shift, and go to state 71
    SYMBOL   shift, and go to state 72


State 70

   33 load_store_instructions: load_store REGISTER "," "[" REGISTER "]" .

    $default  reduce using rule 33 (load_store_instructions)


State 71

   35 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" LITERAL . "]"

    "]"  shift, and go to state 73


State 72

   34 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" SYMBOL . "]"

    "]"  shift, and go to state 74


State 73

   35 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" LITERAL "]" .

    $default  reduce using rule 35 (load_store_instructions)


State 74

   34 load_store_instructions: load_store REGISTER "," "[" REGISTER "+" SYMBOL "]" .

    $default  reduce using rule 34 (load_store_instructions)
